{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA+BE,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC7BC,YAAW,WACPN,EACFI,EAAQ,CAACN,WAAUC,UAEnBM,EAAO,CAACP,WAAUC,S,GAEjBA,E,IAtCPQ,KAAO,CACLC,WAAYC,SAASC,cAAc,SACnCC,WAAYF,SAASC,cAAe,kBACpCE,UAAWH,SAASC,cAAe,iBACnCG,WAAYJ,SAASC,cAAe,mBACpCI,UAAWL,SAASC,cAAc,YAGpCH,KAAKC,WAAWO,iBAAiB,UAE/B,SAAsBC,GACtBA,EAAEC,iBAMF,IAJA,IAAIC,EAAQC,OAAOZ,KAAKI,WAAWS,OAC7BC,EAAOF,OAAOZ,KAAKK,UAAUQ,OAC7BE,EAASH,OAAOZ,KAAKM,WAAWO,OAE9BG,EAAE,EAAGA,GAAKD,EAAQC,GAAG,EAC3B1B,EAAc0B,EAAGL,GAChBM,MAAK,SAAAC,G,IAAE3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAChBJ,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAE9D8B,OAAM,SAAAJ,G,IAAE3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjBJ,EAAA+B,OAAOI,QAAQ,sBAAqCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAE5DmB,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nrefs = { \n  submitForm: document.querySelector(\".form\"),\n  firstDelay: document.querySelector(`[name=\"delay\"]`),\n  delayStep: document.querySelector(`[name=\"step\"]`),\n  amountForm: document.querySelector(`[name=\"amount\"]`),\n  submitBtn: document.querySelector(\".button\"),\n}\n\nrefs.submitForm.addEventListener(\"submit\", onFormSubmit) ;\n\n  function onFormSubmit(e) {\n  e.preventDefault();\n\n  let delay = Number(refs.firstDelay.value);\n  const step = Number(refs.delayStep.value);\n  const amount = Number(refs.amountForm.value);\n\n  for(let i=1; i <= amount; i+=1){\n    createPromise(i, delay)\n    .then(({position, delay}) =>{\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({position, delay}) =>{\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    delay += step;\n  }\n}\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {\n    setTimeout(() => {\n    if (shouldResolve) {\n      resolve({position, delay});\n    } else{\n      reject({position, delay});\n    }\n    }, delay);\n    });\n  }\n\n\n\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","refs","submitForm","document","querySelector","firstDelay","delayStep","amountForm","submitBtn","addEventListener","e","preventDefault","delay1","Number","value","step","amount","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.1dc45193.js.map"}